{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Comments\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.comments, comment => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: comment.id\n    }, _toDisplayString(comment.body), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","comments","comment","key","id","body"],"sources":["C:\\Users\\Master\\OneDrive\\Documents\\VueJs\\Blogemaster\\src\\components\\CommentComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Comments</h2>\r\n      <ul>\r\n        <li v-for=\"comment in comments\" :key=\"comment.id\">{{ comment.body }}</li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState } from 'vuex';\r\n  \r\n  export default {\r\n    name: 'CommentComponent',\r\n    computed: {\r\n      ...mapState(['comments'])\r\n    },\r\n    mounted() {\r\n      this.$store.dispatch('fetchComments');\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAEMA,mBAAA,CAAiB,YAAb,UAAQ;;;uBADdC,mBAAA,CAKM,cAJJC,UAAiB,EACjBF,mBAAA,CAEK,c,kBADHC,mBAAA,CAAyEE,SAAA,QAAAC,WAAA,CAAnDC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBN,mBAAA,CAAyE;MAAxCO,GAAG,EAAED,OAAO,CAACE;wBAAOF,OAAO,CAACG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}