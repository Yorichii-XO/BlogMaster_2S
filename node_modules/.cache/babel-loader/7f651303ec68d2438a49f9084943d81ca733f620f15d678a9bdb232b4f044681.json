{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '@/views/Home.vue';\nimport PostsView from '@/views/posts/PostsView.vue';\nimport CommentsView from '@/views/CommentsADD.vue';\nimport UsersView from '@/views/users/UsersView.vue';\nimport CreatePostComponent from '@/views/posts/CreatePostComponent.vue';\nimport EditPostComponent from '@/views/posts/EditPostComponent.vue';\nimport UserList from '@/views/UserList.vue';\nimport TodoList from '@/views/TodoList.vue';\nimport TodoForm from '@/views/TodoForm.vue';\nimport EditTodo from '@/views/EditTodo.vue';\nimport Login from '@/views/Login.vue';\nimport Register from '@/views/Register.vue';\nimport Profile from '@/views/Profile.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/posts',\n  name: 'Posts',\n  component: PostsView\n}, {\n  path: '/comments',\n  name: 'Comments',\n  component: CommentsView\n}, {\n  path: '/users',\n  name: 'Users',\n  component: UsersView,\n  children: [{\n    path: '',\n    component: UserList\n  } // Display UserList component inside UsersView\n  ]\n}, {\n  path: '/todos',\n  name: 'Todos',\n  component: TodoList,\n  children: [{\n    path: '',\n    component: TodoList\n  } // Display TodoList component inside TodosView\n  ]\n}, {\n  path: '/create',\n  name: 'CreatePost',\n  component: CreatePostComponent\n}, {\n  path: '/edit/:id',\n  name: 'EditPost',\n  component: EditPostComponent\n}, {\n  path: '/add',\n  name: 'AddTodo',\n  component: TodoForm,\n  props: {\n    isEdit: false\n  }\n}, {\n  path: '/edit/:id',\n  name: 'EditTodo',\n  component: TodoForm,\n  props: route => ({\n    isEdit: true,\n    todoId: Number(route.params.id)\n  })\n}, {\n  path: '/edit-todo/:id',\n  name: 'EditTodo',\n  component: EditTodo,\n  props: true // Pass route params as props to the component\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}, {\n  path: '/profile',\n  name: 'Profile',\n  component: Profile\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Navigation guard to check authentication\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n\n  // Check if the route requires authentication\n  if (to.name !== 'Login' && to.name !== 'Register' && !token) {\n    // If user is not authenticated, redirect to login page\n    next({\n      name: 'Login'\n    });\n  } else if (to.name === 'Login' && token) {\n    // If user is already authenticated and trying to access login page, redirect to home\n    next({\n      name: 'Home'\n    });\n  } else {\n    // Allow navigation to the route\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","PostsView","CommentsView","UsersView","CreatePostComponent","EditPostComponent","UserList","TodoList","TodoForm","EditTodo","Login","Register","Profile","routes","path","name","component","children","props","isEdit","route","todoId","Number","params","id","router","history","beforeEach","to","from","next","token","localStorage","getItem"],"sources":["C:/Users/Master/OneDrive/Documents/VueJs/Blogemaster/src/components/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport Home from '@/views/Home.vue';\r\nimport PostsView from '@/views/posts/PostsView.vue';\r\nimport CommentsView from '@/views/CommentsADD.vue';\r\nimport UsersView from '@/views/users/UsersView.vue';\r\nimport CreatePostComponent from '@/views/posts/CreatePostComponent.vue';\r\nimport EditPostComponent from '@/views/posts/EditPostComponent.vue';\r\nimport UserList from '@/views/UserList.vue';\r\nimport TodoList from '@/views/TodoList.vue';\r\nimport TodoForm from '@/views/TodoForm.vue';\r\nimport EditTodo from '@/views/EditTodo.vue';\r\nimport Login from '@/views/Login.vue';\r\nimport Register from '@/views/Register.vue';\r\nimport Profile from '@/views/Profile.vue';\r\n\r\nconst routes = [\r\n  { path: '/', name: 'Home', component: Home },\r\n  { path: '/posts', name: 'Posts', component: PostsView },\r\n  { path: '/comments', name: 'Comments', component: CommentsView },\r\n  {\r\n    path: '/users',\r\n    name: 'Users',\r\n    component: UsersView,\r\n    children: [\r\n      { path: '', component: UserList },  // Display UserList component inside UsersView\r\n    ],\r\n  },\r\n  {\r\n    path: '/todos',\r\n    name: 'Todos',\r\n    component: TodoList,\r\n    children: [\r\n      { path: '', component: TodoList },  // Display TodoList component inside TodosView\r\n    ],\r\n  },\r\n  {\r\n    path: '/create',\r\n    name: 'CreatePost',\r\n    component: CreatePostComponent,\r\n  },\r\n  {\r\n    path: '/edit/:id',\r\n    name: 'EditPost',\r\n    component: EditPostComponent,\r\n  },\r\n  {\r\n    path: '/add',\r\n    name: 'AddTodo',\r\n    component: TodoForm,\r\n    props: { isEdit: false }\r\n  },\r\n  {\r\n    path: '/edit/:id',\r\n    name: 'EditTodo',\r\n    component: TodoForm,\r\n    props: route => ({ isEdit: true, todoId: Number(route.params.id) })\r\n  },\r\n  {\r\n    path: '/edit-todo/:id',\r\n    name: 'EditTodo',\r\n    component: EditTodo,\r\n    props: true // Pass route params as props to the component\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: Register,\r\n  },\r\n  {\r\n    path: '/profile',\r\n    name: 'Profile',\r\n    component: Profile,\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\n// Navigation guard to check authentication\r\nrouter.beforeEach((to, from, next) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  // Check if the route requires authentication\r\n  if (to.name !== 'Login' && to.name !== 'Register' && !token) {\r\n    // If user is not authenticated, redirect to login page\r\n    next({ name: 'Login' });\r\n  } else if (to.name === 'Login' && token) {\r\n    // If user is already authenticated and trying to access login page, redirect to home\r\n    next({ name: 'Home' });\r\n  } else {\r\n    // Allow navigation to the route\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}