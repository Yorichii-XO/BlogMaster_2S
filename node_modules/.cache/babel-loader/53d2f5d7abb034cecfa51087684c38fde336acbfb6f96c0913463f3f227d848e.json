{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport axios from 'axios';\nexport default {\n  \"name\": MainApp,\n  data() {\n    return {\n      tweets: [],\n      error: null,\n      newTweetContent: ''\n    };\n  },\n  mounted() {\n    this.fetchTweets();\n  },\n  methods: {\n    fetchTweets() {\n      axios.get('http://localhost:3000/tweets').then(response => {\n        this.tweets = response.data;\n      }).catch(error => {\n        this.error = \"Error fetching tweets: \" + error.message;\n      });\n    },\n    addTweet() {\n      if (!this.newTweetContent.trim()) {\n        return; // Prevent adding empty tweets\n      }\n\n      axios.post('http://localhost:3000/tweets', {\n        content: this.newTweetContent\n        // Assuming you have user information or authentication handled elsewhere\n      }).then(response => {\n        this.tweets.unshift(response.data); // Add new tweet to the beginning of the list\n        this.newTweetContent = ''; // Clear input field\n      }).catch(error => {\n        this.error = \"Error adding tweet: \" + error.message;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","MainApp","data","tweets","error","newTweetContent","mounted","fetchTweets","methods","get","then","response","catch","message","addTweet","trim","post","content","unshift"],"sources":["C:\\Users\\Master\\OneDrive\\Documents\\VueJs\\projet-vuejs3-basic\\src\\components\\Main.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Form to Add New Tweet -->\r\n    <form @submit.prevent=\"addTweet\" class=\"flex justify-between p-4 bg-gray-800\">\r\n      <input v-model=\"newTweetContent\" type=\"text\" class=\"py-2 px-3 rounded-lg bg-gray-700 text-white w-full mr-2\" placeholder=\"What's on your mind?\" required>\r\n      <button type=\"submit\" class=\"py-2 px-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600\">Tweet</button>\r\n    </form>\r\n\r\n    <!-- Display Tweets -->\r\n    <div v-for=\"tweet in tweets\" :key=\"tweet.id\" class=\"flex flex-shrink-0 w-full p-4\">\r\n      <div class=\"flex-shrink-0 m-2\">\r\n        <a href=\"#\" class=\"flex title-font font-medium items-center\">\r\n          <img v-if=\"tweet.user && tweet.user.avatar\" class=\"h-11 w-11 rounded-full\" :src=\"tweet.user.avatar\" alt=\"User Avatar\" />\r\n        </a>\r\n      </div>\r\n      <div class=\"flex-1 bg-transparent rounded-lg px-4 pt-2 mt-2\">\r\n        <div v-if=\"tweet.user\">\r\n          <h2 class=\"text-base leading-6 font-medium text-gray-400\">\r\n            {{ tweet.user.name }} <span class=\"text-sm leading-5 font-medium text-gray-500 group-hover:text-gray-300 transition ease-in-out duration-150\"> {{ tweet.user.handle }} Â· </span>\r\n            <span class=\"text-sm leading-5 font-medium text-gray-500 group-hover:text-gray-300 transition ease-in-out duration-150\">\r\n              {{ tweet.created_at }}\r\n            </span>\r\n          </h2>\r\n        </div>\r\n        <div>\r\n          <p class=\"text-white block text-lg leading-snug mt-3\">\r\n            {{ tweet.content }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Error Handling -->\r\n    <div v-if=\"error\" class=\"text-red-500 text-center mt-4\">\r\n      {{ error }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  \"name\":MainApp,\r\n  data() {\r\n    return {\r\n      tweets: [],\r\n      error: null,\r\n      newTweetContent: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchTweets();\r\n  },\r\n  methods: {\r\n    fetchTweets() {\r\n      axios.get('http://localhost:3000/tweets')\r\n        .then(response => {\r\n          this.tweets = response.data;\r\n        })\r\n        .catch(error => {\r\n          this.error = \"Error fetching tweets: \" + error.message;\r\n        });\r\n    },\r\n    addTweet() {\r\n      if (!this.newTweetContent.trim()) {\r\n        return; // Prevent adding empty tweets\r\n      }\r\n\r\n      axios.post('http://localhost:3000/tweets', {\r\n        content: this.newTweetContent,\r\n        // Assuming you have user information or authentication handled elsewhere\r\n      })\r\n        .then(response => {\r\n          this.tweets.unshift(response.data); // Add new tweet to the beginning of the list\r\n          this.newTweetContent = ''; // Clear input field\r\n        })\r\n        .catch(error => {\r\n          this.error = \"Error adding tweet: \" + error.message;\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your component-specific styles here */\r\n</style>\r\n"],"mappings":";AAwCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACb,MAAM,EAACC,OAAO;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,IAAI;MACXC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZP,KAAK,CAACS,GAAG,CAAC,8BAA8B,EACrCC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,MAAK,GAAIQ,QAAQ,CAACT,IAAI;MAC7B,CAAC,EACAU,KAAK,CAACR,KAAI,IAAK;QACd,IAAI,CAACA,KAAI,GAAI,yBAAwB,GAAIA,KAAK,CAACS,OAAO;MACxD,CAAC,CAAC;IACN,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC,IAAI,CAACT,eAAe,CAACU,IAAI,CAAC,CAAC,EAAE;QAChC,OAAM,CAAE;MACV;;MAEAf,KAAK,CAACgB,IAAI,CAAC,8BAA8B,EAAE;QACzCC,OAAO,EAAE,IAAI,CAACZ;QACd;MACF,CAAC,EACEK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,MAAM,CAACe,OAAO,CAACP,QAAQ,CAACT,IAAI,CAAC,EAAE;QACpC,IAAI,CAACG,eAAc,GAAI,EAAE,EAAE;MAC7B,CAAC,EACAO,KAAK,CAACR,KAAI,IAAK;QACd,IAAI,CAACA,KAAI,GAAI,sBAAqB,GAAIA,KAAK,CAACS,OAAO;MACrD,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}