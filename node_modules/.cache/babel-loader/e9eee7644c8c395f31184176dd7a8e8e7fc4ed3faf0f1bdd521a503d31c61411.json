{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add a Comment\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Comment\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addComment && $options.addComment(...args), [\"prevent\"]))\n  }, [_createTextVNode(\"* \"), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.commentBody = $event),\n    placeholder: \"Write a comment...\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.commentBody]]), _hoisted_2], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","addComment","$data","commentBody","$event","placeholder","required","_hoisted_2"],"sources":["C:\\Users\\Master\\OneDrive\\Documents\\VueJs\\Blogemaster\\src\\views\\CommentsView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Add a Comment</h2>\r\n    <form @submit.prevent=\"addComment\">*\r\n      \r\n      <textarea v-model=\"commentBody\" placeholder=\"Write a comment...\" required></textarea>\r\n      <button type=\"submit\">Add Comment</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AddComment',\r\n  data() {\r\n    return {\r\n      commentBody: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async addComment() {\r\n      try {\r\n        const newComment = {\r\n          body: this.commentBody,\r\n          postId: this.$route.params.postId,\r\n        };\r\n        await axios.post('http://localhost:3003/comments', newComment);\r\n        this.commentBody = '';\r\n      } catch (error) {\r\n        console.error('Error adding comment:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";gCAEIA,mBAAA,CAAsB,YAAlB,eAAa;gCAIfA,mBAAA,CAA0C;EAAlCC,IAAI,EAAC;AAAQ,GAAC,aAAW;;;uBALrCC,mBAAA,CAOM,cANJC,UAAsB,EACtBH,mBAAA,CAIO;IAJAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;uBAAE,IAEjC,G,gBAAAP,mBAAA,CAAqF;+DAAlEU,KAAA,CAAAC,WAAW,GAAAC,MAAA;IAAEC,WAAW,EAAC,oBAAoB;IAACC,QAAQ,EAAR;iDAA9CJ,KAAA,CAAAC,WAAW,E,GAC9BI,UAA0C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}