{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"px-4 py-2 bg-blue-500 text-white rounded mt-2\"\n}, \"Add Comment\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addComment && $options.addComment(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newComment = $event),\n    placeholder: \"Add a comment...\",\n    rows: \"3\",\n    class: \"w-full p-2 border border-gray-300 rounded\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newComment]]), _hoisted_1], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","class","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","addComment","$data","newComment","$event","placeholder","rows","_hoisted_1"],"sources":["C:\\Users\\Master\\OneDrive\\Documents\\VueJs\\Blogemaster\\src\\views\\CommentsADD.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"addComment\">\r\n      <textarea v-model=\"newComment\" placeholder=\"Add a comment...\" rows=\"3\" class=\"w-full p-2 border border-gray-300 rounded\"></textarea>\r\n      <button type=\"submit\" class=\"px-4 py-2 bg-blue-500 text-white rounded mt-2\">Add Comment</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CommentsADD',\r\n  props: ['postId'],\r\n  data() {\r\n    return {\r\n      newComment: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async addComment() {\r\n      try {\r\n        await axios.post(`http://localhost:3000/posts/${this.postId}/comments`, { text: this.newComment });\r\n        this.newComment = ''; // Clear input field\r\n        this.$emit('comment-added'); // Emit event to refresh comments\r\n      } catch (error) {\r\n        console.error('Error adding comment:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";gCAIMA,mBAAA,CAAgG;EAAxFC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;GAAgD,aAAW;;;uBAH3FC,mBAAA,CAKM,cAJJH,mBAAA,CAGO;IAHAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAC/BP,mBAAA,CAAoI;+DAAjHU,KAAA,CAAAC,UAAU,GAAAC,MAAA;IAAEC,WAAW,EAAC,kBAAkB;IAACC,IAAI,EAAC,GAAG;IAACZ,KAAK,EAAC;iDAA1DQ,KAAA,CAAAC,UAAU,E,GAC7BI,UAAgG,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}