{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '@/components/Home.vue';\nimport PostsView from '@/views/posts/PostsView.vue';\nimport CommentsView from '@/views/comments/CommentView.vue';\nimport EditPostComponent from '@/views/posts/EditPostComponent.vue';\nimport CreatePostComponent from '@/views/posts/EditPostComponent.vue';\nimport TodoList from '@/views/todos/TodoList.vue';\nimport TodoForm from '@/views/todos/TodoForm.vue';\nimport Login from '@/views/auth/Login.vue';\nimport Register from '@/views/auth/Register.vue';\nimport Profile from '@/views/auth/Profile.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/posts',\n  name: 'Posts',\n  component: PostsView\n}, {\n  path: '/comments',\n  name: 'Comments',\n  component: CommentsView\n}, {\n  path: '/todos',\n  name: 'Todos',\n  component: TodoList,\n  children: [{\n    path: '',\n    component: TodoList\n  } // Display TodoList component inside TodosView\n  ]\n}, {\n  path: '/edit/:id',\n  name: 'EditPost',\n  component: EditPostComponent\n}, {\n  path: '/add-todo',\n  name: 'AddTodo',\n  component: TodoForm,\n  props: {\n    isEdit: false\n  }\n}, {\n  path: '/edit-todo/:id',\n  name: 'EditTodo',\n  component: TodoForm,\n  props: route => ({\n    isEdit: true,\n    todoId: Number(route.params.id)\n  })\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}, {\n  path: '/profile',\n  name: 'Profile',\n  component: Profile\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Navigation guard to check authentication\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n\n  // Check if the route requires authentication\n  if (to.name !== 'Login' && to.name !== 'Register' && !token) {\n    // If user is not authenticated, redirect to login page\n    next({\n      name: 'Login'\n    });\n  } else if (to.name === 'Login' && token) {\n    // If user is already authenticated and trying to access login page, redirect to home\n    next({\n      name: 'Home'\n    });\n  } else {\n    // Allow navigation to the route\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","PostsView","CommentsView","EditPostComponent","CreatePostComponent","TodoList","TodoForm","Login","Register","Profile","routes","path","name","component","children","props","isEdit","route","todoId","Number","params","id","router","history","beforeEach","to","from","next","token","localStorage","getItem"],"sources":["C:/Users/Master/OneDrive/Documents/VueJs/Blogemaster/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport Home from '@/components/Home.vue';\r\nimport PostsView from '@/views/posts/PostsView.vue';\r\nimport CommentsView from '@/views/comments/CommentView.vue'; \r\nimport EditPostComponent from '@/views/posts/EditPostComponent.vue';\r\nimport CreatePostComponent from '@/views/posts/EditPostComponent.vue';\r\nimport TodoList from '@/views/todos/TodoList.vue';\r\nimport TodoForm from '@/views/todos/TodoForm.vue';\r\nimport Login from '@/views/auth/Login.vue';\r\nimport Register from '@/views/auth/Register.vue';\r\nimport Profile from '@/views/auth/Profile.vue';\r\n\r\nconst routes = [\r\n    { path: '/', name: 'Home', component: Home },\r\n    { path: '/posts', name: 'Posts', component: PostsView },\r\n    { path: '/comments', name: 'Comments', component: CommentsView },\r\n    {\r\n        path: '/todos',\r\n        name: 'Todos',\r\n        component: TodoList,\r\n        children: [\r\n            { path: '', component: TodoList },  // Display TodoList component inside TodosView\r\n        ],\r\n    },\r\n    {\r\n        path: '/edit/:id',\r\n        name: 'EditPost',\r\n        component: EditPostComponent,\r\n    },\r\n    {\r\n        path: '/add-todo',\r\n        name: 'AddTodo',\r\n        component: TodoForm,\r\n        props: { isEdit: false }\r\n    },\r\n    {\r\n        path: '/edit-todo/:id',\r\n        name: 'EditTodo',\r\n        component: TodoForm,\r\n        props: route => ({ isEdit: true, todoId: Number(route.params.id) })\r\n    },\r\n    {\r\n        path: '/login',\r\n        name: 'Login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/register',\r\n        name: 'Register',\r\n        component: Register,\r\n    },\r\n    {\r\n        path: '/profile',\r\n        name: 'Profile',\r\n        component: Profile,\r\n    },\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes\r\n});\r\n\r\n// Navigation guard to check authentication\r\nrouter.beforeEach((to, from, next) => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Check if the route requires authentication\r\n    if (to.name !== 'Login' && to.name !== 'Register' && !token) {\r\n        // If user is not authenticated, redirect to login page\r\n        next({ name: 'Login' });\r\n    } else if (to.name === 'Login' && token) {\r\n        // If user is already authenticated and trying to access login page, redirect to home\r\n        next({ name: 'Home' });\r\n    } else {\r\n        // Allow navigation to the route\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,OAAO,MAAM,0BAA0B;AAE9C,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEb;AAAK,CAAC,EAC5C;EAAEW,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEZ;AAAU,CAAC,EACvD;EAAEU,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEX;AAAa,CAAC,EAChE;EACIS,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAER,QAAQ;EACnBS,QAAQ,EAAE,CACN;IAAEH,IAAI,EAAE,EAAE;IAAEE,SAAS,EAAER;EAAS,CAAC,CAAG;EAAA;AAE5C,CAAC,EACD;EACIM,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEV;AACf,CAAC,EACD;EACIQ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEP,QAAQ;EACnBS,KAAK,EAAE;IAAEC,MAAM,EAAE;EAAM;AAC3B,CAAC,EACD;EACIL,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEP,QAAQ;EACnBS,KAAK,EAAEE,KAAK,KAAK;IAAED,MAAM,EAAE,IAAI;IAAEE,MAAM,EAAEC,MAAM,CAACF,KAAK,CAACG,MAAM,CAACC,EAAE;EAAE,CAAC;AACtE,CAAC,EACD;EACIV,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACf,CAAC,EACD;EACII,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;AACf,CAAC,EACD;EACIG,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEJ;AACf,CAAC,CACJ;AAED,MAAMa,MAAM,GAAGxB,YAAY,CAAC;EACxByB,OAAO,EAAExB,gBAAgB,CAAC,CAAC;EAC3BW;AACJ,CAAC,CAAC;;AAEF;AACAY,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAIL,EAAE,CAACb,IAAI,KAAK,OAAO,IAAIa,EAAE,CAACb,IAAI,KAAK,UAAU,IAAI,CAACgB,KAAK,EAAE;IACzD;IACAD,IAAI,CAAC;MAAEf,IAAI,EAAE;IAAQ,CAAC,CAAC;EAC3B,CAAC,MAAM,IAAIa,EAAE,CAACb,IAAI,KAAK,OAAO,IAAIgB,KAAK,EAAE;IACrC;IACAD,IAAI,CAAC;MAAEf,IAAI,EAAE;IAAO,CAAC,CAAC;EAC1B,CAAC,MAAM;IACH;IACAe,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}