{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"text-gray-700\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"No comments yet.\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.id,\n      class: \"border-b border-gray-200 py-2\"\n    }, [_createElementVNode(\"p\", _hoisted_2, _toDisplayString(comment.text), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [..._hoisted_5]))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_4","_createElementBlock","$data","comments","length","_hoisted_1","_Fragment","_renderList","comment","key","id","_hoisted_2","_toDisplayString","text","_hoisted_3","_hoisted_5"],"sources":["C:\\Users\\Master\\OneDrive\\Documents\\VueJs\\Blogemaster\\src\\views\\CommentView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"comments.length > 0\">\r\n      <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"border-b border-gray-200 py-2\">\r\n        <p class=\"text-gray-700\">{{ comment.text }}</p>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p>No comments yet.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CommentView',\r\n  props: ['postId'],\r\n  data() {\r\n    return {\r\n      comments: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchComments();\r\n  },\r\n  methods: {\r\n    async fetchComments() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/posts/${this.postId}/comments`);\r\n        this.comments = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching comments:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;;;;EAIWA,KAAK,EAAC;AAAe;;;;gCAI1BC,mBAAA,CAAuB,WAApB,kBAAgB;oBAAnBC,UAAuB,C;;uBAP3BC,mBAAA,CASM,cAROC,KAAA,CAAAC,QAAQ,CAACC,MAAM,Q,cAA1BH,mBAAA,CAIM,OAAAI,UAAA,I,kBAHJJ,mBAAA,CAEMK,SAAA,QAAAC,WAAA,CAFiBL,KAAA,CAAAC,QAAQ,EAAnBK,OAAO;yBAAnBP,mBAAA,CAEM;MAF4BQ,GAAG,EAAED,OAAO,CAACE,EAAE;MAAEZ,KAAK,EAAC;QACvDC,mBAAA,CAA+C,KAA/CY,UAA+C,EAAAC,gBAAA,CAAnBJ,OAAO,CAACK,IAAI,iB;qDAG5CZ,mBAAA,CAEM,OAAAa,UAAA,MAAAC,UAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}