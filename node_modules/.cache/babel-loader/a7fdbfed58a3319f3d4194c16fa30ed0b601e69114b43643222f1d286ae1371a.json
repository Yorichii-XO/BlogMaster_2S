{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Comment\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addComment && $options.addComment(...args), [\"prevent\"])),\n    class: \"sticky flex\"\n  }, [_createTextVNode(\"    \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.commentBody = $event),\n    placeholder: \"Write a comment...\",\n    class: \"border h-10 w-60\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.commentBody]]), _hoisted_1], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","addComment","class","$data","commentBody","$event","placeholder","required","_hoisted_1"],"sources":["C:\\Users\\Master\\OneDrive\\Documents\\VueJs\\Blogemaster\\src\\views\\CommentsView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <form @submit.prevent=\"addComment\" class=\"sticky flex\">\r\n     \r\n      &nbsp;&nbsp; \r\n      <input v-model=\"commentBody\" placeholder=\"Write a comment...\" class=\"border h-10 w-60\" required/>\r\n      <button type=\"submit\">Add Comment</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AddComment',\r\n  props: {\r\n    postId: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      commentBody: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async addComment() {\r\n      try {\r\n        const newComment = {\r\n          body: this.commentBody,\r\n          postId: this.postId, // Use the prop here\r\n        };\r\n        await axios.post('http://localhost:3003/comments', newComment); // Ensure URL is correct\r\n        this.commentBody = '';\r\n      } catch (error) {\r\n        console.error('Error adding comment:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";gCAOMA,mBAAA,CAA0C;EAAlCC,IAAI,EAAC;AAAQ,GAAC,aAAW;;;uBANrCC,mBAAA,CAQM,cANJF,mBAAA,CAKO;IALAG,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEG,KAAK,EAAC;uBAAc,MAGrD,G,gBAAAT,mBAAA,CAAiG;+DAAjFU,KAAA,CAAAC,WAAW,GAAAC,MAAA;IAAEC,WAAW,EAAC,oBAAoB;IAACJ,KAAK,EAAC,kBAAkB;IAACK,QAAQ,EAAR;iDAAvEJ,KAAA,CAAAC,WAAW,E,GAC3BI,UAA0C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}