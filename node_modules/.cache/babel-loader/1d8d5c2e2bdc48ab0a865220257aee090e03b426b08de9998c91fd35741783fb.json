{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TodoList',\n  data() {\n    return {\n      todos: [],\n      categories: [],\n      selectedCategory: '' // Used for filtering todos by category\n    };\n  },\n\n  created() {\n    this.fetchCategories();\n    this.fetchTodos();\n  },\n  methods: {\n    fetchCategories() {\n      axios.get('http://localhost:3002/categories').then(response => {\n        this.categories = response.data;\n      }).catch(error => {\n        console.error(\"There was an error fetching the categories:\", error);\n      });\n    },\n    fetchTodos() {\n      const categoryFilter = this.selectedCategory ? `?categoryId=${this.selectedCategory}` : '';\n      axios.get(`http://localhost:3001/todos${categoryFilter}`).then(response => {\n        this.todos = response.data;\n      }).catch(error => {\n        console.error(\"There was an error fetching the todos:\", error);\n      });\n    },\n    deleteTodo(id) {\n      axios.delete(`http://localhost:3001/todos/${id}`).then(() => {\n        this.fetchTodos();\n      }).catch(error => {\n        console.error(\"There was an error deleting the todo:\", error);\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.categories.find(cat => cat.id === categoryId);\n      return category ? category.name : 'Unknown';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","todos","categories","selectedCategory","created","fetchCategories","fetchTodos","methods","get","then","response","catch","error","console","categoryFilter","deleteTodo","id","delete","getCategoryName","categoryId","category","find","cat"],"sources":["C:\\Users\\Master\\OneDrive\\Documents\\VueJs\\Blogemaster\\src\\views\\TodoList.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-6 bg-gray-100 min-h-screen\">\r\n    <h2 class=\"text-2xl font-bold mb-4\">Todo List</h2>\r\n\r\n    <!-- Todos List in Cards -->\r\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n      <div v-for=\"todo in todos\" :key=\"todo.id\" class=\"p-4 bg-white border border-gray-200 rounded-lg shadow-md\">\r\n        <h3 class=\"text-xl font-semibold mb-2\">{{ todo.title }}</h3>\r\n        <p class=\"text-gray-700 mb-2\">Due Date: {{ todo.dueDate }}</p>\r\n        <p class=\"text-gray-700 mb-2\">Status: {{ todo.status }}</p>\r\n        <div>\r\n          <router-link :to=\"{ name: 'EditTodo', params: { id: todo.id } }\" class=\"px-2 py-1 bg-blue-500 text-white rounded mr-2 inline-block hover:bg-blue-600\">Edit</router-link>\r\n          <button @click=\"deleteTodo(todo.id)\" class=\"px-2 py-1 bg-red-500 text-white rounded hover:bg-red-600\">Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Todo Button -->\r\n    <router-link to=\"/add\" class=\"mt-4 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 inline-block\">Add Todo</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TodoList',\r\n  data() {\r\n    return {\r\n      todos: [],\r\n      categories: [],\r\n      selectedCategory: '', // Used for filtering todos by category\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchCategories();\r\n    this.fetchTodos();\r\n  },\r\n  methods: {\r\n    fetchCategories() {\r\n      axios.get('http://localhost:3002/categories')\r\n        .then(response => {\r\n          this.categories = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error(\"There was an error fetching the categories:\", error);\r\n        });\r\n    },\r\n    fetchTodos() {\r\n      const categoryFilter = this.selectedCategory ? `?categoryId=${this.selectedCategory}` : '';\r\n      axios.get(`http://localhost:3001/todos${categoryFilter}`)\r\n        .then(response => {\r\n          this.todos = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error(\"There was an error fetching the todos:\", error);\r\n        });\r\n    },\r\n    deleteTodo(id) {\r\n      axios.delete(`http://localhost:3001/todos/${id}`)\r\n        .then(() => {\r\n          this.fetchTodos();\r\n        })\r\n        .catch(error => {\r\n          console.error(\"There was an error deleting the todo:\", error);\r\n        });\r\n    },\r\n    getCategoryName(categoryId) {\r\n      const category = this.categories.find(cat => cat.id === categoryId);\r\n      return category ? category.name : 'Unknown';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Additional scoped styles if needed */\r\n</style>\r\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,gBAAgB,EAAE,EAAE,CAAE;IACxB,CAAC;EACH,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACPF,eAAeA,CAAA,EAAG;MAChBP,KAAK,CAACU,GAAG,CAAC,kCAAkC,EACzCC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,UAAS,GAAIQ,QAAQ,CAACV,IAAI;MACjC,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACrE,CAAC,CAAC;IACN,CAAC;IACDN,UAAUA,CAAA,EAAG;MACX,MAAMQ,cAAa,GAAI,IAAI,CAACX,gBAAe,GAAK,eAAc,IAAI,CAACA,gBAAiB,KAAI,EAAE;MAC1FL,KAAK,CAACU,GAAG,CAAE,8BAA6BM,cAAe,EAAC,EACrDL,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACT,KAAI,GAAIS,QAAQ,CAACV,IAAI;MAC5B,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC,CAAC;IACN,CAAC;IACDG,UAAUA,CAACC,EAAE,EAAE;MACblB,KAAK,CAACmB,MAAM,CAAE,+BAA8BD,EAAG,EAAC,EAC7CP,IAAI,CAAC,MAAM;QACV,IAAI,CAACH,UAAU,CAAC,CAAC;MACnB,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;IACN,CAAC;IACDM,eAAeA,CAACC,UAAU,EAAE;MAC1B,MAAMC,QAAO,GAAI,IAAI,CAAClB,UAAU,CAACmB,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACN,EAAC,KAAMG,UAAU,CAAC;MACnE,OAAOC,QAAO,GAAIA,QAAQ,CAACrB,IAAG,GAAI,SAAS;IAC7C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}